[{"C:\\Projects\\react-todo-fullstack\\src\\App.jsx":"1","C:\\Projects\\react-todo-fullstack\\src\\index.jsx":"2","C:\\Projects\\react-todo-fullstack\\src\\components\\Header.jsx":"3","C:\\Projects\\react-todo-fullstack\\src\\components\\Button.jsx":"4","C:\\Projects\\react-todo-fullstack\\src\\components\\Tasks.jsx":"5","C:\\Projects\\react-todo-fullstack\\src\\components\\Task.jsx":"6","C:\\Projects\\react-todo-fullstack\\src\\components\\AddTask.jsx":"7"},{"size":1349,"mtime":1611844656797,"results":"8","hashOfConfig":"9"},{"size":219,"mtime":1611762375419,"results":"10","hashOfConfig":"9"},{"size":1090,"mtime":1611826784750,"results":"11","hashOfConfig":"9"},{"size":623,"mtime":1611827094679,"results":"12","hashOfConfig":"9"},{"size":316,"mtime":1611839951879,"results":"13","hashOfConfig":"9"},{"size":505,"mtime":1611840819090,"results":"14","hashOfConfig":"9"},{"size":1536,"mtime":1611844115928,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xcbuzp",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Projects\\react-todo-fullstack\\src\\App.jsx",[],"C:\\Projects\\react-todo-fullstack\\src\\index.jsx",[],["32","33","34","35","36"],"C:\\Projects\\react-todo-fullstack\\src\\components\\Header.jsx",["37"],"/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable react/prop-types */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"./Button\";\r\n\r\nconst Header = ({ title }) => {\r\n  const onClick = () => {\r\n    console.log(\"Click\");\r\n  };\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>{title}</h1>\r\n      <Button color=\"green\" text=\"Add\" onClick={onClick} />\r\n    </header>\r\n  );\r\n};\r\n// If you want, you can add a default prop for title e.g.\r\n// Then, whenever you put the title prop somewhere, it will show the default name\r\n// Header.defaultProps = {\r\n//   title: \"Task Tracker\",\r\n// };\r\n\r\n// To avoid entering the wrong proptype, define the type of prop one should add\r\n// If the wrong proptype is added, an error will show on the console\r\n// If you have \"isRequired\", no default props is needed, it kind of acts as a default prop\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\n// CSS in JSX\r\n// const headingStyle = {\r\n//     color: \"red\",\r\n//     backgroundColor: \"black\",\r\n//   };\r\n\r\nexport default Header;\r\n","C:\\Projects\\react-todo-fullstack\\src\\components\\Button.jsx",[],"C:\\Projects\\react-todo-fullstack\\src\\components\\Tasks.jsx",[],"C:\\Projects\\react-todo-fullstack\\src\\components\\Task.jsx",[],"C:\\Projects\\react-todo-fullstack\\src\\components\\AddTask.jsx",["38"],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":9,"column":5,"nodeType":"51","messageId":"52","endLine":9,"endColumn":16},{"ruleId":"53","severity":1,"message":"54","line":14,"column":7,"nodeType":"55","messageId":"52","endLine":14,"endColumn":34},"lines-around-directive",["56"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","no-alert","Unexpected alert.","CallExpression","padding-line-between-statements"]